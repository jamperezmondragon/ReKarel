

@top Script {
    StartProgram Execution EndProgram
}


Execution {
    StartExecution expressionList EndExecution
}

whileStatement {
    While boolStatement Do
    expression
}

iterateStatement {
    Iterate  numberStatement  Times
    expression
}

ifStatement {
    If boolStatement Then expression
    
}

Block {
     Begin End | Begin expressionList End
}

expression {
    call |  whileStatement | iterateStatement | ifStatement |
    Block
}

expressionList {
    expression | expressionList ";"  expression?
}


call {
    Identifier | Identifier "(" numberStatement ")"
}

numberStatement { Number }

@precedence { binaryLogic @left}

boolStatement { clause | boolStatement !binaryLogic binaryOperator boolStatement  | Not boolStatement }
clause { IFZ | BoolFunc | "(" boolStatement ")"}
IFZ {
    ifzero "(" numberStatement ")"
}

BoolFunc {
    @specialize<Identifier, "junto-a-zumbador"> |
    @specialize<Identifier, "no-junto-a-zumbador"> |
    @specialize<Identifier, "frente-libre"> |
    @specialize<Identifier, "izquierda-libre"> |
    @specialize<Identifier, "derecha-libre"> |
    @specialize<Identifier, "frente-bloqueado"> |
    @specialize<Identifier, "izquierda-bloqueada"> |
    @specialize<Identifier, "derecha-bloqueada"> |
    @specialize<Identifier, "orientado-al-norte"> |
    @specialize<Identifier, "orientado-al-sur"> |
    @specialize<Identifier, "orientado-al-este"> |
    @specialize<Identifier, "orientado-al-oeste"> |
    @specialize<Identifier, "no-orientado-al-norte"> |
    @specialize<Identifier, "no-orientado-al-sur"> |
    @specialize<Identifier, "no-orientado-al-este"> |
    @specialize<Identifier, "no-orientado-al-oeste"> |
    @specialize<Identifier, "algun-zumbador-en-la-mochila"> |    
    @specialize<Identifier, "ningun-zumbador-en-la-mochila">
}
binaryOperator {Or | And}

Begin[closedBy="End"] {
    start
}

End[openedBy="Begin"] {
    end
}



While { @specialize<Identifier, "mientras"> }
Do { @specialize<Identifier, "hacer"> }
Then { @specialize<Identifier, "entonces"> }
Times { @specialize<Identifier, "veces"> }
If { @specialize<Identifier, "si"> }
Else { @specialize<Identifier, "sino"> |  @specialize<Identifier, "si-no"> }
Iterate { @specialize<Identifier, "repetir"> }
start { @specialize<Identifier, "inicio"> }
end { @specialize<Identifier, "fin"> }
StartProgram { @specialize<Identifier, "iniciar-programa"> }
EndProgram { @specialize<Identifier, "finalizar-programa"> }
StartExecution { @specialize<Identifier, "inicia-ejecucion"> }
EndExecution { @specialize<Identifier, "termina-ejecucion"> }
ifzero { @specialize<Identifier, "si-es-cero"> }
And { @specialize<Identifier, "y"> }
Not { @specialize<Identifier, "no"> }
Or { @specialize<Identifier, "o"> }

@tokens {
    space { @whitespace+ }
    Define { "define-nueva-instruccion" }
    Prototipo { "define-nuevo-prototipo" }
    Identifier { $[A-Za-zÀ-ÖØ-öø-ÿ_]$[A-Za-zÀ-ÖØ-öø-ÿ0-9_-]*}
    Number { $[0-9]+}
}



@skip { space  }